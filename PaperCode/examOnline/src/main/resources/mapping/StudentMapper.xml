<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.examOnline.dao.StudentDao" >
  <resultMap id="BaseResultMap" type="com.examOnline.model.Student" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="other1" property="other1" jdbcType="VARCHAR" />
    <result column="other2" property="other2" jdbcType="VARCHAR" />
    <result column="other3" property="other3" jdbcType="VARCHAR" />
    <result column="other4" property="other4" jdbcType="VARCHAR" />
    <result column="other5" property="other5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, NAME, sex, code, PASSWORD, email, school, college, major, other1, other2, other3, 
    other4, other5
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.examOnline.model.Student" >
    insert into student (id, NAME, sex, 
      code, PASSWORD, email, 
      school, college, major, 
      other1, other2, other3, 
      other4, other5)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{other1,jdbcType=VARCHAR}, #{other2,jdbcType=VARCHAR}, #{other3,jdbcType=VARCHAR}, 
      #{other4,jdbcType=VARCHAR}, #{other5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.examOnline.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="other1 != null" >
        other1,
      </if>
      <if test="other2 != null" >
        other2,
      </if>
      <if test="other3 != null" >
        other3,
      </if>
      <if test="other4 != null" >
        other4,
      </if>
      <if test="other5 != null" >
        other5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="other1 != null" >
        #{other1,jdbcType=VARCHAR},
      </if>
      <if test="other2 != null" >
        #{other2,jdbcType=VARCHAR},
      </if>
      <if test="other3 != null" >
        #{other3,jdbcType=VARCHAR},
      </if>
      <if test="other4 != null" >
        #{other4,jdbcType=VARCHAR},
      </if>
      <if test="other5 != null" >
        #{other5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.examOnline.model.Student" >
    update student
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="other1 != null" >
        other1 = #{other1,jdbcType=VARCHAR},
      </if>
      <if test="other2 != null" >
        other2 = #{other2,jdbcType=VARCHAR},
      </if>
      <if test="other3 != null" >
        other3 = #{other3,jdbcType=VARCHAR},
      </if>
      <if test="other4 != null" >
        other4 = #{other4,jdbcType=VARCHAR},
      </if>
      <if test="other5 != null" >
        other5 = #{other5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.examOnline.model.Student" >
    update student
    set NAME = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      other1 = #{other1,jdbcType=VARCHAR},
      other2 = #{other2,jdbcType=VARCHAR},
      other3 = #{other3,jdbcType=VARCHAR},
      other4 = #{other4,jdbcType=VARCHAR},
      other5 = #{other5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
	  select * from student where code=#{LoginName}
  </select>
</mapper>